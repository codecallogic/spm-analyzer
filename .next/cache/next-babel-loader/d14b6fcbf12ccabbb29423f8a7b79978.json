{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Applications/MAMP/htdocs/MERN-Stack-Apps/apps/spm-analyzer/components/video.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useRef } from 'react';\n\nconst Video = ({}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    scrollY: 0,\n    stuck: false,\n    videoWrap: null\n  });\n  const {\n    scrollY,\n    stuck,\n    videoWrap\n  } = state;\n  const child1 = useRef(null);\n  useEffect(() => {\n    if (child1.current) {\n      console.log(child1);\n      let videoOffset = child1.current.offsetTop + child1.current.scrollHeight;\n      console.log(videoOffset);\n      setState(_objectSpread(_objectSpread({}, state), {}, {\n        videoWrap: videoOffset\n      }));\n    } // let videoOffset = child1.current.offsetTop + child1.current.scrollHeight\n    // console.log(videoOffset)\n    // setState({...state, videoWrap: videoOffset});\n\n\n    window.addEventListener('scroll', handleScroll);\n  }, []);\n\n  const onScroll = e => {\n    console.log('Hello');\n  };\n\n  const handleScroll = e => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      scrollY: window.scrollY\n    }));\n  }; //1320\n  //1217\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [scrollY, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-title\",\n      children: \"What is SPM?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-subheading\",\n      children: \"See the Video Below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-wrap\",\n      ref: child1,\n      onScroll: onScroll,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `video-player ` + (scrollY > videoWrap ? 'stuck' : ''),\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          src: \"/media/video.mp4\",\n          frameBorder: \"0\",\n          gesture: \"media\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), scrollY]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\nexport default Video;","map":{"version":3,"sources":["/Applications/MAMP/htdocs/MERN-Stack-Apps/apps/spm-analyzer/components/video.jsx"],"names":["React","useState","useEffect","useRef","Video","state","setState","scrollY","stuck","videoWrap","child1","current","console","log","videoOffset","offsetTop","scrollHeight","window","addEventListener","handleScroll","onScroll","e"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAgD,OAAhD;;AAEA,MAAMC,KAAK,GAAG,CAAC,EAAD,KAAQ;AAEpB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC;AACjCM,IAAAA,OAAO,EAAE,CADwB;AAEjCC,IAAAA,KAAK,EAAE,KAF0B;AAGjCC,IAAAA,SAAS,EAAE;AAHsB,GAAD,CAAlC;AAMA,QAAM;AAACF,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAA8BJ,KAApC;AAEA,QAAMK,MAAM,GAAGP,MAAM,CAAC,IAAD,CAArB;AAEAD,EAAAA,SAAS,CAAE,MAAM;AACf,QAAIQ,MAAM,CAACC,OAAX,EAAoB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,UAAII,WAAW,GAAGJ,MAAM,CAACC,OAAP,CAAeI,SAAf,GAA2BL,MAAM,CAACC,OAAP,CAAeK,YAA5D;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AACAR,MAAAA,QAAQ,iCAAKD,KAAL;AAAYI,QAAAA,SAAS,EAAEK;AAAvB,SAAR;AACD,KANc,CAOf;AACA;AACA;;;AACAG,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AACD,GAXQ,EAWN,EAXM,CAAT;;AAaA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACtBT,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAIE,CAAD,IAAO;AAE1Bf,IAAAA,QAAQ,iCAAKD,KAAL;AAAYE,MAAAA,OAAO,EAAEU,MAAM,CAACV;AAA5B,OAAR;AACD,GAHD,CA7BoB,CAiCpB;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,eACGA,OADH,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEG,MAAjC;AAAyC,MAAA,QAAQ,EAAEU,QAAnD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,eAAD,IAAoBb,OAAO,GAAGE,SAAV,GAAsB,OAAtB,GAA+B,EAAnD,CAAhB;AAAA,+BACE;AAAQ,UAAA,GAAG,EAAC,kBAAZ;AAA+B,UAAA,WAAW,EAAC,GAA3C;AAA+C,UAAA,OAAO,EAAC,OAAvD;AAA+D,UAAA,eAAe;AAA9E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EAIGF,OAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjDD;;AAmDA,eAAeH,KAAf","sourcesContent":["import React, {useState, useEffect,useRef} from 'react'\n\nconst Video = ({}) => {\n\n  const [state, setState] = useState({\n    scrollY: 0,\n    stuck: false,\n    videoWrap: null\n  })\n\n  const {scrollY, stuck, videoWrap} = state\n\n  const child1 = useRef(null);\n\n  useEffect( () => {\n    if (child1.current) {\n      console.log(child1)\n      let videoOffset = child1.current.offsetTop + child1.current.scrollHeight\n      console.log(videoOffset)\n      setState({...state, videoWrap: videoOffset});\n    }\n    // let videoOffset = child1.current.offsetTop + child1.current.scrollHeight\n    // console.log(videoOffset)\n    // setState({...state, videoWrap: videoOffset});\n    window.addEventListener('scroll', handleScroll);\n  }, [])\n\n  const onScroll = (e) => {\n    console.log('Hello')\n  }\n\n  const handleScroll = (e) => {\n   \n    setState({...state, scrollY: window.scrollY});\n  }\n  //1320\n  //1217\n  \n  return (\n    <div className=\"video\">\n      {scrollY}\n      <div className=\"video-title\">What is SPM?</div>\n      <div className=\"video-subheading\">See the Video Below</div>\n      <div className=\"video-wrap\" ref={child1} onScroll={onScroll} >\n        <div className={`video-player ` + ( scrollY > videoWrap ? 'stuck': '')}>\n          <iframe src=\"/media/video.mp4\" frameBorder=\"0\" gesture=\"media\" allowFullScreen></iframe>\n        </div>\n        {scrollY}\n      </div>\n    </div>\n  )\n}\n\nexport default Video"]},"metadata":{},"sourceType":"module"}